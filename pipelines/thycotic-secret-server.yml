trigger: none

variables:
- group: development # Generic environment variables
- name: vmImageName
  value: 'ubuntu-latest'

pool:
  vmImage: $(vmImageName)

stages:
- stage: build
  displayName: Thycotic Secret Server
  jobs:
  - job: thycotics_secret_server
    displayName: Thycotics Secret Server Get Secret
    steps:
    # - task: ThycoticTSS@0
    #   inputs:
    #     ServerUrl: 'https://inchworks.secretservercloud.com'
    #     ApiPathUri: 'api/v1'
    #     TokenPathUri: 'oauth2/token'
    #     Username: 'azure-devops-user'
    #     Password: 'WelcomeTombrady01!'
    #     SecretId: '2'
    #     FieldFilter: '*'
    # - script: |
    #     echo 'Resource:' $(TSS_resource)
    #     echo 'Username:' $(TSS_username)
    #     echo 'Password:' $(TSS_password)
    #     echo 'Notes:' $(TSS_notes)
    #   displayName: Secrets Values
    - task: CopyThycoticTSS@0
      inputs:
        ServerUrl: 'https://tfic.secretservercloud.com'
        ApiPathUri: 'api/v1'
        TokenPathUri: 'oauth2/token'
        Username: $(secretserver_username)
        Password: $(secretserver_password)
        SecretId: '3'
        FieldFilter: '*'
    # - bash: |
    #      echo "##vso[task.setvariable variable=TSS_password2;issecret=true]j&HDtktHP0xGuNYGm8Rna1o%72n"
    # - bash: |
    #     echo "##vso[task.setvariable variable=TSS_password2;issecret=true]bbasdasdasd"
    - powershell: |
        # encode string as UTF8 byte array, encode byte array as base64 string
        $b64 = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes("j&HDtktHP0xGuNYGm8Rna1o%72n"))
        # set variable value to base64
        Write-Host "Encoded secret $b64"
        Write-Host "##vso[task.setvariable variable=TSS_password2;issecret=true;isreadonly=true]$b64"
    - powershell: |
        Write-Host "Encoded Environment Variable $(TSS_password2)"
        $text = [Text.Encoding]::UTF8.GetString([Convert]::FromBase64String("$(TSS_password2)"))
        Write-Host "Decoded Environment Variable $text"
        Write-Host $text.equals("j&HDtktHP0xGuNYGm8Rna1o%72n")
        Write-Host "secret concationation: $text+$(secret)"
    
    # - powershell: |
    #     # encode string as UTF8 byte array, encode byte array as base64 string
    #     $b64 = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes("$(secret)"))
    #     # set variable value to base64
    #     Write-Host "Encoded secret $b64"
    #     Write-Host "##vso[task.setvariable variable=TSS_password2;issecret=true]$b64"
    # - powershell: |
    #     Write-Host "Encoded Environment Variable $(TSS_password2)"
    #     $text = [Text.Encoding]::UTF8.GetString([Convert]::FromBase64String("$(TSS_password2)"))
    #     Write-Host "Decoded Environment Variable $text"
    #     Write-Host $text.equals("$(secret)")
    - script: |
        env
        echo 'TSS Password2 is:' $(TSS_password2)
        echo 'TSS Password is:' $(TSS_password)
        echo 'Secret:' $(secret)
      displayName: Secrets Values